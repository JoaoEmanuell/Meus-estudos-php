Todo comando PHP deve estar entre as tags

<?php
	bloco;
?>

Todo comando deve ser fechado com ; no final dele

============================================

echo "texto" = escreve na tela o texto desejado

Dentro dos comandos do PHP pode-se usar tags html

echo "<h2>texto</h2>"

============================================

phpinfo() = exibe informações sobre o PHP atual

============================================
//Aula 04

$var = dado; declara uma variavel

echo "$var texto"; concatena um texto
============================================
//Aula 05

Colocando letras e numeros na url:

http://localhost/Aula_05.php?a=5&b=3

E separando usando &

Podemos fazer o PHP retirar elementos dessa URL, usando o comando:

$var = $_GET["a"];

Dessa forma é possivel ter elementos personalizados usando a url.

abs(v) = Valor absoluto

pow(v1, v2) = Potenciação

sqrt(v) = Raiz quadrada

round(v) = Arredondamento
	ceil(v) = Arredonda de maneira positiva
	floor(v) = Arredonda de maneira negativa

intval(v) = Valor inteiro da variavel

number_format(v, d, 'dec_point', 'thousands_sep') = Formatação
	v = variavel
	d = numero de casas decimais
	dec_point = sinal de separação decimal (por padrão é ponto)
	thousands_sep = sinal de separação milar (por padrão é virgula)
============================================
//Aula 06

Pré-incremento:

	$a = $a + 1
	
	++$a

Pós-incremento:

	$a = $a + 1

	$a++

Pré-decremento:

	$a = $a - 1

	--$a

Pós-decremento:

	$a = $a - 1

	$a--
	
Comentários inline:

	//Comentário

	#Comentário

Comentários multiline:

	/*Tudo o que estiver aqui é comentário*/

Variáveis referenciadas:

Variáveis referenciadas são variáves que recebem o valor
de outra variável, porém se a variável for mudada a outra 
tmb será, existe uma ligação entre as variáveis.

$var = 3;

$varb = &$var;

Variáveis de variáveis:

Variáveis de variáveis são variáveis que o nome delas sera
o valor de outra variável:

$var = "oi";

$$var = "eae";

echo "$var";

echo "$oi";

Dessa forma temos uma variavel que o nome dela é o valor
da outra variável.
============================================
//Aula 07

Operadores Relacionais:

Maior >

Menor <

Maior ou igual >=

Menor ou igual <=

Diferente <> ou !=

Igual ==

Idêntico === //Testa se o conteudo da var é igual ao da
outra var

Operador Unário:

expressão ? verdadeiro : falso;

Mesma coisa do operador ternario

Operadores Lógicos:

and && :
	
	Se os dois valores forem veradeiros ele retorna
	verdadeiro senão retorna falso

or || :

	Se um valor for verdadeiro ele retorna verdadeiro
	senão ele retorna falso

xor:

	Se um valor for falso ele retorna verdadeiro, mas
	se dois valores forem falsos ele retorna falso,
	senão ele retorna falso

!:

	Se um valor é verdadeiro ele retorna falso

	Se um valor é falso ele retorna verdadeiro
	
date("Y") = Pega o ano atual
============================================
//Aula 08

$var = $_GET['input_name']; = a var recebe o elemento indicado na url
$var = $_POST['input_name']; = a var recebe o elemento indicado por pacotes

Lembresse que para usar ambos depedende do metodo da tag form do html, se a form for com get use o o $_GET, se não use o $_POST.

Para envitar bugs você pode usar: 

$var = isset($_GET['input_name'] ? $_GET['input_name'] : value_erro;

ou

$var = isset($_POST['input_name'] ? $_POST['input_name'] : value_erro;

o metodo isset serve para verificar se há um erro no valor passado, caso exista ele ira impedir bugs

============================================
//Aula 09

Condição simples:

	if (condição){
		bloco;
	}

Condição composta:

	if (condição){
		bloco;
	}
	else{
		bloco;
	}
	
Or

	if (condição){
		bloco;
	}
	elseif (condição){
		bloco;
	}
	else{
		bloco;
	}
	
============================================
//Aula 10

Switch simples:

switch ($var) {

	case value:
		bloco;
		break;
	
	default:
		bloco;
		break;
	
Essa condição switch serve principalmente para valores exatos, lembresse de colocar os breaks; para evitar bugs

Switch multiplos casos:

switch ($var) {

	case value:
	case value:
	case value:
		bloco;
		break;
	
	default:
		bloco;
		break;
}

Essa condiçaõ serve para valores que sejam em sequencia, por exemplo: 1, 2, 3, caso o valor seja igual a um desses o bloco sera executado.
============================================
//Aula 11

while (condição) {
	bloco;
}

Primeiro teste depois realize o bloco
============================================
//Aula 12

do {
	bloco;
} while (condição)

primeiro realize o bloco e depois teste.
============================================
//Aula 13

for ($var_inicial = valor; condição; incremento) {
	bloco
}

Declare a $var inicial, verifique se a condição é verdadeira, se ela for falsa execute o bloco, incremente.
============================================
//Aula 14

function name(paramentros){
	bloco;
}

Dessa forma ele ira criar a função que você deseja.

Caso que queria que ela retorne algo você utilize o return $var

Funções com multiplos paramentros:

function name(){
	
	$p = func_get_args();
	tot = func_num_args();

}

$p = ira pegar todos os valores colocados nos paramentros entre ()

$tot = ira pegar o numero total de casas (separações de elementos) entre ()
============================================
